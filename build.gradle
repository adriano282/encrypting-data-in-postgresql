buildscript {
	ext {
		kotlinVersion = '1.2.70'
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()

		maven {
			url 'https://dl.bintray.com/palantir/releases' // docker-compose-rule is published on bintray
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'br.com.adrianodeveloper'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}


sourceSets {
	integrationTest {
		java {
			srcDir 'src/integrationTest/java'
			compileClasspath += sourceSets.test.compileClasspath
			runtimeClasspath += sourceSets.test.runtimeClasspath
		}
		resources.srcDir 'src/integrationTest/resources'
	}
}

task integrationTest(type: Test) {
	group = LifecycleBasePlugin.VERIFICATION_GROUP
	
	description = 'Runs the integration tests.'
	
	systemProperty "spring.profiles.active", "it"

	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	
	outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	maven {
		url 'https://dl.bintray.com/palantir/releases' // docker-compose-rule is published on bintray
	}
}


ext {
	springCloudVersion = 'Greenwich.M3'
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.cloud:spring-cloud-starter-config')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")

	runtimeOnly('com.h2database:h2')
	runtimeOnly('org.postgresql:postgresql')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.palantir.docker.compose:docker-compose-rule-junit4:0.32.1')
	testCompile('com.palantir.docker.compose:docker-compose-rule-core:0.32.1')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task copyToDocker (type: Copy) {
	from "build/libs"
	into "docker/"
	include "*.jar"
}

bootJar.finalizedBy copyToDocker
